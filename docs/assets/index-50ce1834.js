var y=Object.defineProperty;var P=(o,t,r)=>t in o?y(o,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[t]=r;var d=(o,t,r)=>(P(o,typeof t!="symbol"?t+"":t,r),r);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function r(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(e){if(e.ep)return;e.ep=!0;const s=r(e);fetch(e.href,s)}})();const v=(o,t,r)=>t<o?o:t<r?t:r,L=(o,t)=>{let r,n;o.addEventListener("dragstart",s=>{const i=document.createElement("div");r=s.clientX-o.offsetLeft,n=s.clientY-o.offsetTop,s.dataTransfer.setDragImage(i,0,0)});const e=s=>{const i=s.clientY-n,l=s.clientX-r,c=t.offsetTop+t.offsetHeight-o.offsetHeight,a=t.offsetTop,u=t.offsetLeft+t.offsetWidth-o.offsetWidth,h=t.offsetLeft;o.style.top=`${v(c,i,a)}px`,o.style.left=`${v(u,l,h)}px`};o.addEventListener("drag",s=>{e(s)}),o.addEventListener("dragend",s=>{e(s)})},A=o=>{const t=o.offsetWidth/o.offsetHeight,r=.1;o.addEventListener("wheel",n=>{const e=n.deltaY*t*r,s=n.deltaY*r,i=(n.clientX-o.offsetLeft)/o.offsetWidth,l=(n.clientY-o.offsetTop)/o.offsetHeight;o.style.width=`${o.offsetWidth+e}px`,o.style.height=`${o.offsetHeight+s}px`,o.style.left=`${o.offsetLeft-e*i}px`,o.style.top=`${o.offsetTop-s*l}px`})},S=(o,t)=>{let r=[],n=0,e,s;if(t===0)return 1;for(let i=0;i<t;i++)r.push(i);for(;r[0]!==o.length-t;){e=1;for(let i=0;i<t;i++)e*=o[r[i]];for(n+=e,s=t-1;s>0&&r[s]===o.length-t+s;)s--;if(r[s]!==o.length-t+s){r[s]++;for(let i=s+1;i<t;i++)r[i]=r[s]+i-s}}e=1;for(let i=0;i<t;i++)e*=o[r[i]];return n+=e,n},X=o=>{let t=[],r=[];const n=o.length;for(let e=0;e<n;e++)r.push(-o[e]);for(let e=0;e<n+1;e++)t.push(S(r,n-e));return t},C=(o,t)=>{let r=0,n;r=t[0];for(let e=1;e<t.length;e++){n=1;for(let s=0;s<e;s++)n=n*o;r+=t[e]*n}return r},Y=(o,t)=>{const r=o.length;let n=[],e=[],s=[],i;for(let l=0;l<o.length;l++)e.push(0);for(let l=0;l<r;l++){s=structuredClone(o),s.splice(l,1),n=X(s),i=C(o[l],n);for(let c=0;c<o.length;c++)n[c]/=i,n[c]*=t[l],e[c]+=n[c]}return e},w=(o,t,r)=>{let n=[],e=[],s=o.length,i;for(let l=0;l<r;l++){e=[];for(let c=0;c<r;c++){i=0;for(let a=0;a<s;a++)i+=o[a]**(l+c);e.push(i)}n.push(e)}return n},x=(o,t,r)=>{let n=[],e=o.length,s;for(let i=0;i<r;i++){s=0;for(let l=0;l<e;l++)s+=t[l]*o[l]**i;n.push(s)}return n},g=(o,t)=>{let r=structuredClone(o),n=o.length;for(let e=0;e<n;e++)r[e].push(t[e]);return r},E=(o,t)=>{let r=[],n=o.length;for(let e=0;e<n;e++)r.push(o[e][t]);return r},q=(o,t,r)=>{let n=structuredClone(o),e=[];return e=n.splice(t,1,n[r]),n.splice(r,1,e[0]),n},b=o=>o<0?o*-1:o,T=(o,t)=>{let r=structuredClone(o),n,e=b(o[t][t]),s,i;const l=o.length;n=e;for(let c=t+1;c<l;c++)s=b(r[c][t]),n<s&&(n=s,i=c);return n>e&&(r=q(r,t,i)),r},W=o=>{let t=structuredClone(o),r=o.length,n=o[1].length,e;for(let s=0;s<r;s++){t=T(t,s),e=t[s][s];for(let i=s;i<n;i++)t[s][i]/=e;for(let i=0;i<s;i++){e=t[i][s];for(let l=s;l<n;l++)t[i][l]-=t[s][l]*e}for(let i=s+1;i<r;i++){e=t[i][s];for(let l=s;l<n;l++)t[i][l]-=t[s][l]*e}}return t},$=(o,t,r)=>{let n=w(o,t,r),e=x(o,t,r),s=g(n,e);return s=W(s),E(s,s.length)},H=o=>{let t=[],r=o.length;for(let n=0;n<r-1;n++)t.push(o[n+1]-o[n]);return t},I=(o,t,r)=>{let n=0,e,s;n=t[0],e=o-r;for(let i=1;i<t.length;i++){s=1;for(let l=0;l<i;l++)s=s*e;n+=t[i]*s}return n},k=(o,t,r,n)=>{const e=o.length;n.push(0),r.push(1),t.push(0);for(let s=1;s<e;s++)n.push(o[s-1]),r.push(2*(o[s-1]+o[s])),t.push(o[s]);return n.push(0),r.push(1),t.push(0),1},M=(o,t)=>{let r=[],n=t.length;r.push(0);for(let e=1;e<n-1;e++)r.push(3*(t[e+1]-t[e])/o[e]-3*(t[e]-t[e-1])/o[e-1]);return r.push(0),r},O=(o,t,r,n)=>{let e=structuredClone(o),s=structuredClone(t),i=structuredClone(r),l=structuredClone(n),c,a=n.length;for(let u=0;u<a-1;u++)c=s[u],s[u]=1,e[u]/=c,l[u]/=c,c=i[u+1],i[u+1]=0,s[u+1]-=e[u]*c,l[u+1]-=l[u]*c;l[a]/=s[a],s[a]=1;for(let u=1;u<a-1;u++)l[u]-=e[u]*l[u-1];return l},F=(o,t)=>{let r=H(o),n,e=[],s=[],i=[],l=[],c=[],a=[],u=[],h=[];l=M(r,t),k(r,e,s,i),u=O(e,s,i,l),n=r.length;for(let f=0;f<n;f++)c.push((t[f+1]-t[f])/r[f]-r[f]*(2*u[f]+u[f+1])/3),a.push((u[f+1]-u[f])/(3*r[f]));for(let f=0;f<n;f++)h.push([]);return h=g(h,t),h=g(h,c),h=g(h,u),h=g(h,a),h};class R{constructor(){d(this,"divHTML");d(this,"ventanaHTML");d(this,"btnAgregarPuntosAct",!1);d(this,"puntos",[]);d(this,"puntosX",[]);d(this,"puntosY",[]);this.divHTML=document.querySelector(".grafico"),this.ventanaHTML=document.querySelector(".ventana"),L(this.divHTML,this.ventanaHTML),A(this.divHTML),this.divHTML.addEventListener("click",t=>{if(this.btnAgregarPuntosAct){const r=t.clientX-this.divHTML.offsetLeft,n=t.clientY-this.divHTML.offsetTop;this.agregarPunto(new m(r,n))}})}agregarPunto(t){t.divHTML.style.top=`${t.y/this.divHTML.offsetHeight*100}%`,t.divHTML.style.left=`${t.x/this.divHTML.offsetWidth*100}%`,this.divHTML.append(t.divHTML),this.puntos.push(t),this.puntosX.push(t.x),this.puntosY.push(t.y)}agregarLinea(t){t.divHTML.style.width=`${t.largo/this.divHTML.offsetWidth*100}%`,this.divHTML.append(t.divHTML)}graficarFuncion(t){let n=0,e;for(;n<this.divHTML.offsetWidth;)e=t(n),e<this.divHTML.offsetHeight&&this.agregarPunto(new m(n,e)),n+=5}borrarTodo(){this.divHTML.replaceChildren(""),this.puntos=[],this.puntosX=[],this.puntosY=[]}toggleBtnAgregarPuntos(){this.btnAgregarPuntosAct=!this.btnAgregarPuntosAct}obtenerCoefLagrange(){return Y(this.puntosX,this.puntosY)}obtenerCoefMinimosCuadrados(t){return $(this.puntosX,this.puntosY,t)}obtenerCoefSplinesCubicos(){return F(this.puntosX,this.puntosY)}graficarPolinomio(t){this.graficarFuncion(r=>C(r,t))}graficarSplinesCubicos(){let r=this.obtenerCoefSplinesCubicos(),n=this.puntosX[0];for(let e=0;e<this.puntosX.length-1;e++)for(;n<this.puntosX[e+1];)this.agregarPunto(new m(n,I(n,r[e],this.puntosX[e]))),n+=1}}class m{constructor(t,r){d(this,"x");d(this,"y");d(this,"divHTML");this.x=t,this.y=r,this.divHTML=document.createElement("div"),this.divHTML.className="punto"}}const p=new R,j=document.querySelector("#btn-limpiar"),N=document.querySelector("#btn-agregar-puntos"),D=document.querySelector("#btn-lagrange"),B=document.querySelector("#btn-min-cuadrados"),G=document.querySelector("#btn-splines-cubicos");j.addEventListener("click",()=>{p.borrarTodo()});N.addEventListener("click",()=>{p.toggleBtnAgregarPuntos()});D.addEventListener("click",()=>{p.graficarPolinomio(p.obtenerCoefLagrange())});B.addEventListener("click",()=>{p.graficarPolinomio(p.obtenerCoefMinimosCuadrados(5))});G.addEventListener("click",()=>{p.graficarSplinesCubicos()});
