var P=Object.defineProperty;var w=(e,t,r)=>t in e?P(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var h=(e,t,r)=>(w(e,typeof t!="symbol"?t+"":t,r),r);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function r(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(o){if(o.ep)return;o.ep=!0;const s=r(o);fetch(o.href,s)}})();const m=(e,t,r)=>t<e?e:t<r?t:r,x=(e,t)=>{let r,n;e.addEventListener("dragstart",s=>{const i=document.createElement("div");r=s.clientX-e.offsetLeft,n=s.clientY-e.offsetTop,s.dataTransfer.setDragImage(i,0,0)});const o=s=>{const i=s.clientY-n,l=s.clientX-r,c=t.offsetTop+t.offsetHeight-e.offsetHeight,f=t.offsetTop,a=t.offsetLeft+t.offsetWidth-e.offsetWidth,d=t.offsetLeft;e.style.top=`${m(c,i,f)}px`,e.style.left=`${m(a,l,d)}px`};e.addEventListener("drag",s=>{o(s)}),e.addEventListener("dragend",s=>{o(s)})},H=e=>{const t=e.offsetWidth/e.offsetHeight,r=.1;e.addEventListener("wheel",n=>{const o=n.deltaY*t*r,s=n.deltaY*r,i=(n.clientX-e.offsetLeft)/e.offsetWidth,l=(n.clientY-e.offsetTop)/e.offsetHeight;e.style.width=`${e.offsetWidth+o}px`,e.style.height=`${e.offsetHeight+s}px`,e.style.left=`${e.offsetLeft-o*i}px`,e.style.top=`${e.offsetTop-s*l}px`})},Y=(e,t)=>{let r=[],n=0,o,s;if(t===0)return 1;for(let i=0;i<t;i++)r.push(i);for(;r[0]!==e.length-t;){o=1;for(let i=0;i<t;i++)o*=e[r[i]];for(n+=o,s=t-1;s>0&&r[s]===e.length-t+s;)s--;if(r[s]!==e.length-t+s){r[s]++;for(let i=s+1;i<t;i++)r[i]=r[s]+i-s}}o=1;for(let i=0;i<t;i++)o*=e[r[i]];return n+=o,n},M=e=>{let t=[],r=[];const n=e.length;for(let o=0;o<n;o++)r.push(-e[o]);for(let o=0;o<n+1;o++)t.push(Y(r,n-o));return t},C=(e,t)=>{let r=0,n;r=t[0];for(let o=1;o<t.length;o++){n=1;for(let s=0;s<o;s++)n=n*e;r+=t[o]*n}return r},T=(e,t)=>{const r=e.length;let n=[],o=[],s=[],i;for(let l=0;l<e.length;l++)o.push(0);for(let l=0;l<r;l++){s=structuredClone(e),s.splice(l,1),n=M(s),i=C(e[l],n);for(let c=0;c<e.length;c++)n[c]/=i,n[c]*=t[l],o[c]+=n[c]}return o},X=(e,t,r)=>{let n=[],o=[],s=e.length,i;for(let l=0;l<r;l++){o=[];for(let c=0;c<r;c++){i=0;for(let f=0;f<s;f++)i+=e[f]**(l+c);o.push(i)}n.push(o)}return n},$=(e,t,r)=>{let n=[],o=e.length,s;for(let i=0;i<r;i++){s=0;for(let l=0;l<o;l++)s+=t[l]*e[l]**i;n.push(s)}return n},g=(e,t)=>{let r=structuredClone(e),n=e.length;for(let o=0;o<n;o++)r[o].push(t[o]);return r},W=(e,t)=>{let r=[],n=e.length;for(let o=0;o<n;o++)r.push(e[o][t]);return r},E=(e,t,r)=>{let n=structuredClone(e),o=[];return o=n.splice(t,1,n[r]),n.splice(r,1,o[0]),n},y=e=>e<0?e*-1:e,I=(e,t)=>{let r=structuredClone(e),n,o=y(e[t][t]),s,i;const l=e.length;n=o;for(let c=t+1;c<l;c++)s=y(r[c][t]),n<s&&(n=s,i=c);return n>o&&(r=E(r,t,i)),r},S=e=>{let t=structuredClone(e),r=e.length,n=e[1].length,o;for(let s=0;s<r;s++){t=I(t,s),o=t[s][s];for(let i=s;i<n;i++)t[s][i]/=o;for(let i=0;i<s;i++){o=t[i][s];for(let l=s;l<n;l++)t[i][l]-=t[s][l]*o}for(let i=s+1;i<r;i++){o=t[i][s];for(let l=s;l<n;l++)t[i][l]-=t[s][l]*o}}return t},A=(e,t,r)=>{let n=X(e,t,r),o=$(e,t,r),s=g(n,o);return s=S(s),W(s,s.length)},F=e=>{let t=[],r=e.length;for(let n=0;n<r-1;n++)t.push(e[n+1]-e[n]);return t},O=(e,t,r,n)=>{const o=e.length;n.push(0),r.push(1),t.push(0);for(let s=1;s<o;s++)n.push(e[s-1]),r.push(2*(e[s-1]+e[s])),t.push(e[s]);return n.push(0),r.push(1),t.push(0),1},q=(e,t)=>{let r=[],n=t.length;r.push(0);for(let o=1;o<n-1;o++)r.push(3*(t[o+1]-t[o])/e[o]-3*(t[o]-t[o-1])/e[o-1]);return r.push(0),r},N=(e,t,r,n)=>{let o=structuredClone(e),s=structuredClone(t),i=structuredClone(r),l=structuredClone(n),c,f=n.length;for(let a=0;a<f-1;a++)c=s[a],s[a]=1,o[a]/=c,l[a]/=c,c=i[a+1],i[a+1]=0,s[a+1]-=o[a]*c,l[a+1]-=l[a]*c;l[f]/=s[f],s[f]=1;for(let a=1;a<f-1;a++)l[a]-=o[a]*l[a-1];return l},R=(e,t)=>{let r=F(e),n,o=[],s=[],i=[],l=[],c=[],f=[],a=[],d=[];l=q(r,t),O(r,o,s,i),a=N(o,s,i,l),console.log({f:t,c:a,h:r}),n=r.length;for(let u=0;u<n;u++)c.push((t[u+1]-t[u])/r[u]-r[u]*(2*a[u]+a[u+1])/3),f.push((a[u+1]-a[u])/(3*r[u]));for(let u=0;u<n;u++)d.push([]);return d=g(d,t),d=g(d,c),d=g(d,a),d=g(d,f),d};class j{constructor(){h(this,"divHTML");h(this,"ventanaHTML");h(this,"puntos",[]);h(this,"puntosX",[]);h(this,"puntosY",[]);this.divHTML=document.querySelector(".grafico"),this.ventanaHTML=document.querySelector(".ventana"),x(this.divHTML,this.ventanaHTML),H(this.divHTML)}agregarPunto(t){t.divHTML.style.top=`${t.y/this.divHTML.offsetHeight*100}%`,t.divHTML.style.left=`${t.x/this.divHTML.offsetWidth*100}%`,this.divHTML.append(t.divHTML),this.puntos.push(t),this.puntosX.push(t.x),this.puntosY.push(t.y)}agregarLinea(t){t.divHTML.style.width=`${t.largo/this.divHTML.offsetWidth*100}%`,this.divHTML.append(t.divHTML)}graficarFuncion(t){let n=0,o;for(;n<this.divHTML.offsetWidth;)o=t(n),o<this.divHTML.offsetHeight&&this.agregarPunto(new v(n,o)),n+=5}borrarTodo(){this.divHTML.replaceChildren("")}obtenerCoefLagrange(){return T(this.puntosX,this.puntosY)}obtenerCoefMinimosCuadrados(t){return A(this.puntosX,this.puntosY,t)}obtenerCoefSplinesCubicos(){return R(this.puntosX,this.puntosY)}graficarPolinomio(t){this.graficarFuncion(r=>C(r,t))}graficarSplinesCubicos(){}}class v{constructor(t,r){h(this,"x");h(this,"y");h(this,"divHTML");this.x=t,this.y=r,this.divHTML=document.createElement("div"),this.divHTML.className="punto"}}class D{constructor(t,r){h(this,"pto1");h(this,"pto2");h(this,"largo");h(this,"divHTML");const n=r.y-t.y,o=r.x-t.x;this.pto1=t,this.pto2=r,this.divHTML=document.createElement("div"),this.divHTML.className="linea",this.largo=Math.sqrt(o**2+n**2),this.divHTML.style.transform=`rotate(${Math.atan2(n,o)}rad)`,this.divHTML.style.top=t.divHTML.style.top,this.divHTML.style.left=t.divHTML.style.left}}const p=new j,L=new v(500,500),b=new v(700,700);p.agregarPunto(L);p.agregarPunto(b);p.agregarPunto(new v(800,1200));p.agregarLinea(new D(L,b));p.graficarPolinomio(p.obtenerCoefMinimosCuadrados(5));const G=e=>2*e;p.graficarFuncion(G);
