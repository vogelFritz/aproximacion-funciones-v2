var P=Object.defineProperty;var L=(o,t,s)=>t in o?P(o,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[t]=s;var h=(o,t,s)=>(L(o,typeof t!="symbol"?t+"":t,s),s);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function s(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(e){if(e.ep)return;e.ep=!0;const r=s(e);fetch(e.href,r)}})();const v=(o,t,s)=>t<o?o:t<s?t:s,S=(o,t)=>{let s,n;o.addEventListener("dragstart",r=>{const i=document.createElement("div");s=r.clientX-o.offsetLeft,n=r.clientY-o.offsetTop,r.dataTransfer.setDragImage(i,0,0)});const e=r=>{const i=r.clientY-n,l=r.clientX-s,a=t.offsetTop+t.offsetHeight-o.offsetHeight,u=t.offsetTop,c=t.offsetLeft+t.offsetWidth-o.offsetWidth,d=t.offsetLeft;o.style.top=`${v(a,i,u)}px`,o.style.left=`${v(c,l,d)}px`};o.addEventListener("drag",r=>{e(r)}),o.addEventListener("dragend",r=>{e(r)})},A=o=>{const t=o.offsetWidth/o.offsetHeight,s=.1;o.addEventListener("wheel",n=>{const e=n.deltaY*t*s,r=n.deltaY*s,i=(n.clientX-o.offsetLeft)/o.offsetWidth,l=(n.clientY-o.offsetTop)/o.offsetHeight;o.style.width=`${o.offsetWidth+e}px`,o.style.height=`${o.offsetHeight+r}px`,o.style.left=`${o.offsetLeft-e*i}px`,o.style.top=`${o.offsetTop-r*l}px`})},X=(o,t)=>{let s=[],n=0,e,r;if(t===0)return 1;for(let i=0;i<t;i++)s.push(i);for(;s[0]!==o.length-t;){e=1;for(let i=0;i<t;i++)e*=o[s[i]];for(n+=e,r=t-1;r>0&&s[r]===o.length-t+r;)r--;if(s[r]!==o.length-t+r){s[r]++;for(let i=r+1;i<t;i++)s[i]=s[r]+i-r}}e=1;for(let i=0;i<t;i++)e*=o[s[i]];return n+=e,n},Y=o=>{let t=[],s=[];const n=o.length;for(let e=0;e<n;e++)s.push(-o[e]);for(let e=0;e<n+1;e++)t.push(X(s,n-e));return t},y=(o,t)=>{let s=0,n;s=t[0];for(let e=1;e<t.length;e++){n=1;for(let r=0;r<e;r++)n=n*o;s+=t[e]*n}return s},w=(o,t)=>{const s=o.length;let n=[],e=[],r=[],i;for(let l=0;l<o.length;l++)e.push(0);for(let l=0;l<s;l++){r=structuredClone(o),r.splice(l,1),n=Y(r),i=y(o[l],n);for(let a=0;a<o.length;a++)n[a]/=i,n[a]*=t[l],e[a]+=n[a]}return e},x=(o,t,s)=>{let n=[],e=[],r=o.length,i;for(let l=0;l<s;l++){e=[];for(let a=0;a<s;a++){i=0;for(let u=0;u<r;u++)i+=o[u]**(l+a);e.push(i)}n.push(e)}return n},E=(o,t,s)=>{let n=[],e=o.length,r;for(let i=0;i<s;i++){r=0;for(let l=0;l<e;l++)r+=t[l]*o[l]**i;n.push(r)}return n},g=(o,t)=>{let s=structuredClone(o),n=o.length;for(let e=0;e<n;e++)s[e].push(t[e]);return s},q=(o,t)=>{let s=[],n=o.length;for(let e=0;e<n;e++)s.push(o[e][t]);return s},T=(o,t,s)=>{let n=structuredClone(o),e=[];return e=n.splice(t,1,n[s]),n.splice(s,1,e[0]),n},b=o=>o<0?o*-1:o,W=(o,t)=>{let s=structuredClone(o),n,e=b(o[t][t]),r,i;const l=o.length;n=e;for(let a=t+1;a<l;a++)r=b(s[a][t]),n<r&&(n=r,i=a);return n>e&&(s=T(s,t,i)),s},$=o=>{let t=structuredClone(o),s=o.length,n=o[1].length,e;for(let r=0;r<s;r++){t=W(t,r),e=t[r][r];for(let i=r;i<n;i++)t[r][i]/=e;for(let i=0;i<r;i++){e=t[i][r];for(let l=r;l<n;l++)t[i][l]-=t[r][l]*e}for(let i=r+1;i<s;i++){e=t[i][r];for(let l=r;l<n;l++)t[i][l]-=t[r][l]*e}}return t},H=(o,t,s)=>{let n=x(o,t,s),e=E(o,t,s),r=g(n,e);return r=$(r),q(r,r.length)},I=o=>{let t=[],s=o.length;for(let n=0;n<s-1;n++)t.push(o[n+1]-o[n]);return t},D=(o,t,s)=>{let n=0,e,r;n=t[0],e=o-s;for(let i=1;i<t.length;i++){r=1;for(let l=0;l<i;l++)r=r*e;n+=t[i]*r}return n},F=(o,t,s,n)=>{const e=o.length;n.push(0),s.push(1),t.push(0);for(let r=1;r<e;r++)n.push(o[r-1]),s.push(2*(o[r-1]+o[r])),t.push(o[r]);return n.push(0),s.push(1),t.push(0),1},M=(o,t)=>{let s=[],n=t.length;s.push(0);for(let e=1;e<n-1;e++)s.push(3*(t[e+1]-t[e])/o[e]-3*(t[e]-t[e-1])/o[e-1]);return s.push(0),s},O=(o,t,s,n)=>{let e=structuredClone(o),r=structuredClone(t),i=structuredClone(s),l=structuredClone(n),a,u=n.length;for(let c=0;c<u-1;c++)a=r[c],r[c]=1,e[c]/=a,l[c]/=a,a=i[c+1],i[c+1]=0,r[c+1]-=e[c]*a,l[c+1]-=l[c]*a;l[u]/=r[u],r[u]=1;for(let c=1;c<u-1;c++)l[c]-=e[c]*l[c-1];return l},k=(o,t)=>{let s=I(o),n,e=[],r=[],i=[],l=[],a=[],u=[],c=[],d=[];l=M(s,t),F(s,e,r,i),c=O(e,r,i,l),n=s.length;for(let f=0;f<n;f++)a.push((t[f+1]-t[f])/s[f]-s[f]*(2*c[f]+c[f+1])/3),u.push((c[f+1]-c[f])/(3*s[f]));for(let f=0;f<n;f++)d.push([]);return d=g(d,t),d=g(d,a),d=g(d,c),d=g(d,u),d};class R{constructor(){h(this,"divHTML");h(this,"ventanaHTML");h(this,"btnAgregarPuntosAct",!1);h(this,"puntos",[]);h(this,"puntosX",[]);h(this,"puntosY",[]);this.divHTML=document.querySelector(".grafico"),this.ventanaHTML=document.querySelector(".ventana"),S(this.divHTML,this.ventanaHTML),A(this.divHTML),this.divHTML.addEventListener("click",t=>{if(this.btnAgregarPuntosAct){const s=t.clientX-this.divHTML.offsetLeft,n=t.clientY-this.divHTML.offsetTop;this.agregarPunto(new m(s,n))}})}agregarPunto(t){t.divHTML.style.top=`${t.y/this.divHTML.offsetHeight*100}%`,t.divHTML.style.left=`${t.x/this.divHTML.offsetWidth*100}%`,this.divHTML.append(t.divHTML),this.puntos.push(t),this.puntosX.push(t.x),this.puntosY.push(t.y)}agregarLinea(t){t.divHTML.style.width=`${t.largo/this.divHTML.offsetWidth*100}%`,this.divHTML.append(t.divHTML)}graficarFuncion(t){let n=0,e;for(;n<this.divHTML.offsetWidth;)e=t(n),e<this.divHTML.offsetHeight&&this.agregarPunto(new m(n,e)),n+=5}borrarTodo(){this.divHTML.replaceChildren(""),this.puntos=[],this.puntosX=[],this.puntosY=[]}toggleBtnAgregarPuntos(){this.btnAgregarPuntosAct=!this.btnAgregarPuntosAct}obtenerCoefLagrange(){return w(this.puntosX,this.puntosY)}obtenerCoefMinimosCuadrados(t){return H(this.puntosX,this.puntosY,t)}obtenerCoefSplinesCubicos(){return k(this.puntosX,this.puntosY)}graficarPolinomio(t){this.graficarFuncion(s=>y(s,t))}graficarSplinesCubicos(){let s=this.obtenerCoefSplinesCubicos(),n=this.puntosX[0];for(let e=0;e<this.puntosX.length-1;e++)for(;n<this.puntosX[e+1];)this.agregarPunto(new m(n,D(n,s[e],this.puntosX[e]))),n+=1}}class m{constructor(t,s){h(this,"x");h(this,"y");h(this,"divHTML");this.x=t,this.y=s,this.divHTML=document.createElement("div"),this.divHTML.className="punto"}}const p=new R,j=document.querySelector("#btn-limpiar"),N=document.querySelector("#btn-agregar-puntos"),B=document.querySelector("#btn-lagrange");document.querySelector("#btn-min-cuadrados");const G=document.querySelector("#btn-splines-cubicos"),C=document.querySelector(".form-min-cuadrados");j.addEventListener("click",()=>{p.borrarTodo()});N.addEventListener("click",()=>{p.toggleBtnAgregarPuntos()});B.addEventListener("click",()=>{p.graficarPolinomio(p.obtenerCoefLagrange())});G.addEventListener("click",()=>{p.graficarSplinesCubicos()});C.addEventListener("submit",o=>{let t;o.preventDefault(),t=new FormData(C).get("grado-minimos-cuadrados"),p.graficarPolinomio(p.obtenerCoefMinimosCuadrados(t))});
